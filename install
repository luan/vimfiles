#!/bin/bash
#
# Simple tasks for managing my .vim files

FILES_TO_LINK="vimrc gvimrc vim"
LOCALS=".vimrc.local.before .vimrc.local"
DIR=$(cd $(dirname $0) && pwd)

if [ -e $DIR/vim/bundle/neobundle.vim ]; then
  pushd $DIR/vim/bundle/neobundle.vim
  git pull origin master
  popd
else
  mkdir -p $DIR/vim/bundle
  git clone git://github.com/Shougo/neobundle.vim $DIR/vim/bundle/neobundle.vim
fi

if [ -e $DIR/vim/scripts/shell-colors-vim-hybrid ]; then
  pushd $DIR/vim/scripts/shell-colors-vim-hybrid
  git pull origin master
  popd
else
  mkdir -p $DIR/vim/scripts
  git clone https://gist.github.com/0d27cb34e81af344d742.git $DIR/vim/scripts/shell-colors-vim-hybrid
fi

for file in $LOCALS; do
  dot_file=$HOME/$file
  touch $dot_file
done

for file in $FILES_TO_LINK; do
  dot_file=$HOME/.$file
  if [ ! -e $dot_file ]; then
    ln -s $DIR/$file $dot_file
  else
    echo "You already have vim's dotfiles set up on your home directory."
  fi
done

if [ "$(uname)" == "Darwin" ]; then
  VIM_UPDATE_PATH=/usr/local/bin/vim-update
elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
  VIM_UPDATE_PATH=$HOME/bin/vim-update
fi

if [ ! -e $VIM_UPDATE_PATH ]; then
  ln -s $DIR/vim/update $VIM_UPDATE_PATH
fi

if which go; then
  gopackages="code.google.com/p/go.tools/cmd/godoc \
     code.google.com/p/go.tools/cmd/vet \
     code.google.com/p/go.tools/cmd/goimports \
     code.google.com/p/rog-go/exp/cmd/godef \
     github.com/golang/lint/golint \
     github.com/nsf/gocode \
     github.com/jstemmer/gotags"

  for p in $gopackages; do
    go get -u -v $p
  done
fi

pushd $DIR/vim
$DIR/vim/bundle/neobundle.vim/bin/neoinstall
popd
